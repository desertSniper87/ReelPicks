// Mocks generated by Mockito 5.4.6 from annotations
// in movie_recommendation_app/test/widget/profile_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:movie_recommendation_app/core/utils/result.dart' as _i2;
import 'package:movie_recommendation_app/data/models/movie.dart' as _i10;
import 'package:movie_recommendation_app/data/models/user_preferences.dart'
    as _i7;
import 'package:movie_recommendation_app/data/models/user_profile.dart' as _i8;
import 'package:movie_recommendation_app/domain/repositories/movie_repository.dart'
    as _i9;
import 'package:movie_recommendation_app/domain/repositories/user_repository.dart'
    as _i6;
import 'package:movie_recommendation_app/domain/services/authentication_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i3.AuthenticationService {
  MockAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.Result<String>> createRequestToken() =>
      (super.noSuchMethod(
            Invocation.method(#createRequestToken, []),
            returnValue: _i4.Future<_i2.Result<String>>.value(
              _FakeResult_0<String>(
                this,
                Invocation.method(#createRequestToken, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<String>>);

  @override
  _i4.Future<_i2.Result<String>> createSession(String? approvedToken) =>
      (super.noSuchMethod(
            Invocation.method(#createSession, [approvedToken]),
            returnValue: _i4.Future<_i2.Result<String>>.value(
              _FakeResult_0<String>(
                this,
                Invocation.method(#createSession, [approvedToken]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<String>>);

  @override
  _i4.Future<_i2.Result<bool>> validateSession() =>
      (super.noSuchMethod(
            Invocation.method(#validateSession, []),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(
                this,
                Invocation.method(#validateSession, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);

  @override
  _i4.Future<_i2.Result<Map<String, dynamic>>> getAccountDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getAccountDetails, []),
            returnValue: _i4.Future<_i2.Result<Map<String, dynamic>>>.value(
              _FakeResult_0<Map<String, dynamic>>(
                this,
                Invocation.method(#getAccountDetails, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Result<void>> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#logout, [])),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  String getAuthenticationUrl(String? requestToken) =>
      (super.noSuchMethod(
            Invocation.method(#getAuthenticationUrl, [requestToken]),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.method(#getAuthenticationUrl, [requestToken]),
            ),
          )
          as String);

  @override
  _i4.Future<String?> getStoredUsername() =>
      (super.noSuchMethod(
            Invocation.method(#getStoredUsername, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<String?> getStoredAccountName() =>
      (super.noSuchMethod(
            Invocation.method(#getStoredAccountName, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<void>> saveUserPreferences(
    _i7.UserPreferences? preferences,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserPreferences, [preferences]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveUserPreferences, [preferences]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i7.UserPreferences?>> getUserPreferences() =>
      (super.noSuchMethod(
            Invocation.method(#getUserPreferences, []),
            returnValue: _i4.Future<_i2.Result<_i7.UserPreferences?>>.value(
              _FakeResult_0<_i7.UserPreferences?>(
                this,
                Invocation.method(#getUserPreferences, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i7.UserPreferences?>>);

  @override
  _i4.Future<_i2.Result<void>> saveUserProfile(_i8.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserProfile, [profile]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveUserProfile, [profile]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i8.UserProfile?>> getUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, []),
            returnValue: _i4.Future<_i2.Result<_i8.UserProfile?>>.value(
              _FakeResult_0<_i8.UserProfile?>(
                this,
                Invocation.method(#getUserProfile, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i8.UserProfile?>>);

  @override
  _i4.Future<_i2.Result<void>> saveImdbProfile(String? profileUrl) =>
      (super.noSuchMethod(
            Invocation.method(#saveImdbProfile, [profileUrl]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveImdbProfile, [profileUrl]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> saveLetterboxdProfile(String? username) =>
      (super.noSuchMethod(
            Invocation.method(#saveLetterboxdProfile, [username]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveLetterboxdProfile, [username]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> saveGenrePreferences(List<String>? genres) =>
      (super.noSuchMethod(
            Invocation.method(#saveGenrePreferences, [genres]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveGenrePreferences, [genres]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<List<String>>> getGenrePreferences() =>
      (super.noSuchMethod(
            Invocation.method(#getGenrePreferences, []),
            returnValue: _i4.Future<_i2.Result<List<String>>>.value(
              _FakeResult_0<List<String>>(
                this,
                Invocation.method(#getGenrePreferences, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<String>>>);

  @override
  _i4.Future<_i2.Result<void>> clearUserData() =>
      (super.noSuchMethod(
            Invocation.method(#clearUserData, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#clearUserData, [])),
            ),
          )
          as _i4.Future<_i2.Result<void>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i9.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i10.Movie>>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i4.Future<_i2.Result<List<_i10.Movie>>>.value(
              _FakeResult_0<List<_i10.Movie>>(
                this,
                Invocation.method(#searchMovies, [query]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Movie>>>);

  @override
  _i4.Future<_i2.Result<_i10.Movie>> getMovieDetails(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetails, [movieId]),
            returnValue: _i4.Future<_i2.Result<_i10.Movie>>.value(
              _FakeResult_0<_i10.Movie>(
                this,
                Invocation.method(#getMovieDetails, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i10.Movie>>);

  @override
  _i4.Future<_i2.Result<List<_i10.Movie>>> getRecommendations(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendations, [movieId]),
            returnValue: _i4.Future<_i2.Result<List<_i10.Movie>>>.value(
              _FakeResult_0<List<_i10.Movie>>(
                this,
                Invocation.method(#getRecommendations, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i10.Genre>>> getGenres() =>
      (super.noSuchMethod(
            Invocation.method(#getGenres, []),
            returnValue: _i4.Future<_i2.Result<List<_i10.Genre>>>.value(
              _FakeResult_0<List<_i10.Genre>>(
                this,
                Invocation.method(#getGenres, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Genre>>>);

  @override
  _i4.Future<_i2.Result<bool>> rateMovie(int? movieId, double? rating) =>
      (super.noSuchMethod(
            Invocation.method(#rateMovie, [movieId, rating]),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(
                this,
                Invocation.method(#rateMovie, [movieId, rating]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);

  @override
  _i4.Future<_i2.Result<bool>> deleteRating(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRating, [movieId]),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(
                this,
                Invocation.method(#deleteRating, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);

  @override
  _i4.Future<_i2.Result<List<_i10.Movie>>> getRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getRatedMovies, []),
            returnValue: _i4.Future<_i2.Result<List<_i10.Movie>>>.value(
              _FakeResult_0<List<_i10.Movie>>(
                this,
                Invocation.method(#getRatedMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i10.Movie>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i4.Future<_i2.Result<List<_i10.Movie>>>.value(
              _FakeResult_0<List<_i10.Movie>>(
                this,
                Invocation.method(#getWatchlist, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i10.Movie>>> discoverMovies({
    List<int>? genreIds,
    int? page = 1,
    String? sortBy = 'popularity.desc',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#discoverMovies, [], {
              #genreIds: genreIds,
              #page: page,
              #sortBy: sortBy,
            }),
            returnValue: _i4.Future<_i2.Result<List<_i10.Movie>>>.value(
              _FakeResult_0<List<_i10.Movie>>(
                this,
                Invocation.method(#discoverMovies, [], {
                  #genreIds: genreIds,
                  #page: page,
                  #sortBy: sortBy,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i10.Movie>>>);
}
