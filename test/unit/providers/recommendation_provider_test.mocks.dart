// Mocks generated by Mockito 5.4.6 from annotations
// in movie_recommendation_app/test/unit/providers/recommendation_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_recommendation_app/core/utils/result.dart' as _i2;
import 'package:movie_recommendation_app/data/models/movie.dart' as _i7;
import 'package:movie_recommendation_app/data/models/recommendation_result.dart'
    as _i5;
import 'package:movie_recommendation_app/data/models/user_profile.dart' as _i6;
import 'package:movie_recommendation_app/domain/repositories/movie_repository.dart'
    as _i8;
import 'package:movie_recommendation_app/domain/services/recommendation_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RecommendationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecommendationService extends _i1.Mock
    implements _i3.RecommendationService {
  MockRecommendationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.RecommendationResult>>
  getPersonalizedRecommendations(
    _i6.UserProfile? profile, {
    int? page = 1,
    List<int>? excludeMovieIds,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getPersonalizedRecommendations,
              [profile],
              {#page: page, #excludeMovieIds: excludeMovieIds},
            ),
            returnValue: _i4.Future<_i2.Result<_i5.RecommendationResult>>.value(
              _FakeResult_0<_i5.RecommendationResult>(
                this,
                Invocation.method(
                  #getPersonalizedRecommendations,
                  [profile],
                  {#page: page, #excludeMovieIds: excludeMovieIds},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.RecommendationResult>>);

  @override
  _i4.Future<_i2.Result<_i5.RecommendationResult>> getGenreBasedRecommendations(
    List<String>? genres, {
    int? page = 1,
    List<int>? excludeMovieIds,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getGenreBasedRecommendations,
              [genres],
              {#page: page, #excludeMovieIds: excludeMovieIds},
            ),
            returnValue: _i4.Future<_i2.Result<_i5.RecommendationResult>>.value(
              _FakeResult_0<_i5.RecommendationResult>(
                this,
                Invocation.method(
                  #getGenreBasedRecommendations,
                  [genres],
                  {#page: page, #excludeMovieIds: excludeMovieIds},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.RecommendationResult>>);

  @override
  _i4.Future<_i2.Result<_i5.RecommendationResult>> getPopularMovies({
    int? page = 1,
    List<int>? excludeMovieIds,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, [], {
              #page: page,
              #excludeMovieIds: excludeMovieIds,
            }),
            returnValue: _i4.Future<_i2.Result<_i5.RecommendationResult>>.value(
              _FakeResult_0<_i5.RecommendationResult>(
                this,
                Invocation.method(#getPopularMovies, [], {
                  #page: page,
                  #excludeMovieIds: excludeMovieIds,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i5.RecommendationResult>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> getSimilarMovies(
    int? movieId, {
    List<int>? excludeMovieIds,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSimilarMovies,
              [movieId],
              {#excludeMovieIds: excludeMovieIds},
            ),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(
                  #getSimilarMovies,
                  [movieId],
                  {#excludeMovieIds: excludeMovieIds},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);

  @override
  List<_i7.Movie> filterWatchedMovies(
    List<_i7.Movie>? movies,
    List<int>? watchedMovieIds,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filterWatchedMovies, [movies, watchedMovieIds]),
            returnValue: <_i7.Movie>[],
          )
          as List<_i7.Movie>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i8.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(#searchMovies, [query]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);

  @override
  _i4.Future<_i2.Result<_i7.Movie>> getMovieDetails(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetails, [movieId]),
            returnValue: _i4.Future<_i2.Result<_i7.Movie>>.value(
              _FakeResult_0<_i7.Movie>(
                this,
                Invocation.method(#getMovieDetails, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<_i7.Movie>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> getRecommendations(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendations, [movieId]),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(#getRecommendations, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Genre>>> getGenres() =>
      (super.noSuchMethod(
            Invocation.method(#getGenres, []),
            returnValue: _i4.Future<_i2.Result<List<_i7.Genre>>>.value(
              _FakeResult_0<List<_i7.Genre>>(
                this,
                Invocation.method(#getGenres, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Genre>>>);

  @override
  _i4.Future<_i2.Result<bool>> rateMovie(int? movieId, double? rating) =>
      (super.noSuchMethod(
            Invocation.method(#rateMovie, [movieId, rating]),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(
                this,
                Invocation.method(#rateMovie, [movieId, rating]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);

  @override
  _i4.Future<_i2.Result<bool>> deleteRating(int? movieId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRating, [movieId]),
            returnValue: _i4.Future<_i2.Result<bool>>.value(
              _FakeResult_0<bool>(
                this,
                Invocation.method(#deleteRating, [movieId]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<bool>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> getRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getRatedMovies, []),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(#getRatedMovies, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(#getWatchlist, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);

  @override
  _i4.Future<_i2.Result<List<_i7.Movie>>> discoverMovies({
    List<int>? genreIds,
    int? page = 1,
    String? sortBy = 'popularity.desc',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#discoverMovies, [], {
              #genreIds: genreIds,
              #page: page,
              #sortBy: sortBy,
            }),
            returnValue: _i4.Future<_i2.Result<List<_i7.Movie>>>.value(
              _FakeResult_0<List<_i7.Movie>>(
                this,
                Invocation.method(#discoverMovies, [], {
                  #genreIds: genreIds,
                  #page: page,
                  #sortBy: sortBy,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Result<List<_i7.Movie>>>);
}
